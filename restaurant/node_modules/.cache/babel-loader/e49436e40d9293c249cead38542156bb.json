{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_Projects\\\\restaurant\\\\restaurant\\\\src\\\\Components\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { registerPerson } from '../Utils/Register/RegisterValidation';\nimport Field from './RegisterSubComp/Field';\nimport { FIELDS } from '../Utils/Register/Constants';\nimport { ROUTES_WITHOUT_HOMEPAGE } from '../Utils/Register/Constants';\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  function getErrorMessage(value) {\n    return invalidRegister[value];\n  }\n\n  function getEntries() {\n    Axios.get(\"http://localhost:4000/all\").then(response => {\n      setUsers(response.data);\n    });\n  }\n\n  const [nick, setNick] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [pass, setPass] = useState('');\n  const [rePass, setRePass] = useState('');\n  const [email, setEmail] = useState('');\n  const [users, setUsers] = useState(getEntries());\n  const [redirect, setRedirect] = useState(false);\n  const [invalidRegister, setInvalidRegister] = useState({\n    nick: '',\n    firstName: '',\n    lastName: '',\n    pass: '',\n    rePass: '',\n    email: ''\n  });\n  let routing = useHistory();\n  const currentLocation = props.location.pathname;\n  if (ROUTES_WITHOUT_HOMEPAGE[currentLocation]) return null;\n  {\n    redirect && routing.push('./login');\n  }\n  return /*#__PURE__*/_jsxDEV(\"container\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-form\",\n      children: FIELDS.map(currentField => {\n        return /*#__PURE__*/_jsxDEV(Field, {\n          type: currentField.type,\n          icon: currentField.icon,\n          value: eval(currentField.value),\n          setField: eval(currentField.setField),\n          errMsg: getErrorMessage(currentField.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"register-btn\",\n      onClick: () => registerPerson(nick, firstName, lastName, pass, rePass, email, users, setInvalidRegister, setRedirect),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"ekM37DV/B2bO0OMi7hHp1PoMpYk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/React_Projects/restaurant/restaurant/src/Components/Register.js"],"names":["React","useState","useHistory","registerPerson","Field","FIELDS","ROUTES_WITHOUT_HOMEPAGE","Axios","Register","props","getErrorMessage","value","invalidRegister","getEntries","get","then","response","setUsers","data","nick","setNick","firstName","setFirstName","lastName","setLastName","pass","setPass","rePass","setRePass","email","setEmail","users","redirect","setRedirect","setInvalidRegister","routing","currentLocation","location","pathname","push","map","currentField","type","icon","eval","setField"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {useState} from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport {registerPerson} from '../Utils/Register/RegisterValidation'\r\nimport Field from './RegisterSubComp/Field'\r\nimport { FIELDS } from '../Utils/Register/Constants'\r\nimport { ROUTES_WITHOUT_HOMEPAGE } from '../Utils/Register/Constants'\r\nimport Axios from \"axios\"\r\n\r\nconst Register = (props)=>{\r\n\r\n    function getErrorMessage(value){\r\n        return invalidRegister[value];\r\n    }\r\n\r\n    function getEntries(){\r\n        Axios.get(\"http://localhost:4000/all\").then((response) => {\r\n            setUsers(response.data);\r\n        });\r\n    }\r\n    \r\n\r\n    const [nick , setNick] = useState('');\r\n    const [firstName , setFirstName] = useState('');\r\n    const [lastName , setLastName] = useState('');\r\n    const [pass , setPass] = useState('');  \r\n    const [rePass , setRePass] = useState('');\r\n    const [email , setEmail] = useState('');\r\n    const [users , setUsers] = useState(getEntries());\r\n    const [redirect , setRedirect] = useState(false);\r\n    const [invalidRegister , setInvalidRegister] = useState({nick : '' , firstName : '' , lastName : '' , pass : '' , rePass : '' , email : ''});\r\n\r\n    let routing = useHistory();\r\n    const currentLocation = props.location.pathname;\r\n    if(ROUTES_WITHOUT_HOMEPAGE[currentLocation]) return null;\r\n    {redirect && routing.push('./login')}\r\n\r\n    return(\r\n        <container className = 'register-container'>\r\n            <div className = 'register-header'>\r\n                <h1>Register</h1>   \r\n            </div>\r\n            <div className = 'register-form'>\r\n                {FIELDS.map((currentField)=>{\r\n                    return(\r\n                        <Field type = {currentField.type} icon = {currentField.icon} value = {eval(currentField.value)}\r\n                        setField = {eval(currentField.setField)} errMsg = {getErrorMessage(currentField.value)}/>\r\n                    )\r\n                })}\r\n            </div>\r\n            <button className = 'register-btn' onClick = {() => registerPerson(nick , firstName , lastName , pass , rePass , email , users , setInvalidRegister , setRedirect)}>Submit</button>\r\n        </container>    \r\n    );\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}