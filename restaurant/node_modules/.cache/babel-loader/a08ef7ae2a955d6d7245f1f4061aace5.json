{"ast":null,"code":"import menuItems from \"Menu/Constants\";\nexport function incrementItem(id) {\n  const oldItemIndex = shoppingItems.findIndex(it => it.id === id);\n  const currentItem = {\n    idItem: id,\n    user: getCookie('email'),\n    quantity: 1\n  };\n  Axios.post(\"http://localhost:4000/addItem\", {\n    entry: currentItem\n  }).then(() => {\n    const newItems = [...shoppingItems];\n    newItems[oldItemIndex].quantity += 1;\n    setShoppingItems(newItems);\n  }).catch(console.log);\n}\n\nfunction dataCartFormat(userData) {\n  var convertedData = [];\n  userData.forEach(userItem => {\n    for (let key in menuItems) {\n      if (menuItems[key].id === userItem.idItem) {\n        convertedData.push({\n          id: menuItems[key].id,\n          name: key,\n          price: menuItems[key].price,\n          quantity: userItem.quantity\n        });\n        break;\n      }\n    }\n  });\n  return convertedData;\n}\n\nexport default dataCartFormat;","map":{"version":3,"sources":["C:/React_Projects/restaurant/restaurant/src/Cart/logic.js"],"names":["menuItems","incrementItem","id","oldItemIndex","shoppingItems","findIndex","it","currentItem","idItem","user","getCookie","quantity","Axios","post","entry","then","newItems","setShoppingItems","catch","console","log","dataCartFormat","userData","convertedData","forEach","userItem","key","push","name","price"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AAEA,OAAO,SAASC,aAAT,CAAuBC,EAAvB,EAA2B;AAC9B,QAAMC,YAAY,GAAGC,aAAa,CAACC,SAAd,CAAwBC,EAAE,IAAIA,EAAE,CAACJ,EAAH,KAAUA,EAAxC,CAArB;AACA,QAAMK,WAAW,GAAG;AAACC,IAAAA,MAAM,EAAGN,EAAV;AAAeO,IAAAA,IAAI,EAAGC,SAAS,CAAC,OAAD,CAA/B;AAA2CC,IAAAA,QAAQ,EAAG;AAAtD,GAApB;AACAC,EAAAA,KAAK,CAACC,IAAN,CAAW,+BAAX,EAA4C;AACxCC,IAAAA,KAAK,EAAGP;AADgC,GAA5C,EAGCQ,IAHD,CAGM,MAAM;AACR,UAAMC,QAAQ,GAAG,CAAC,GAAGZ,aAAJ,CAAjB;AACAY,IAAAA,QAAQ,CAACb,YAAD,CAAR,CAAuBQ,QAAvB,IAAmC,CAAnC;AACAM,IAAAA,gBAAgB,CAACD,QAAD,CAAhB;AACH,GAPD,EAQCE,KARD,CAQOC,OAAO,CAACC,GARf;AASH;;AAED,SAASC,cAAT,CAAwBC,QAAxB,EAAiC;AAC7B,MAAIC,aAAa,GAAG,EAApB;AACAD,EAAAA,QAAQ,CAACE,OAAT,CAAkBC,QAAD,IAAc;AAC3B,SAAI,IAAIC,GAAR,IAAe1B,SAAf,EAAyB;AACrB,UAAGA,SAAS,CAAC0B,GAAD,CAAT,CAAexB,EAAf,KAAsBuB,QAAQ,CAACjB,MAAlC,EAAyC;AACrCe,QAAAA,aAAa,CAACI,IAAd,CAAmB;AACfzB,UAAAA,EAAE,EAAGF,SAAS,CAAC0B,GAAD,CAAT,CAAexB,EADL;AAEf0B,UAAAA,IAAI,EAAGF,GAFQ;AAGfG,UAAAA,KAAK,EAAG7B,SAAS,CAAC0B,GAAD,CAAT,CAAeG,KAHR;AAIflB,UAAAA,QAAQ,EAAGc,QAAQ,CAACd;AAJL,SAAnB;AAMA;AACH;AACJ;AACJ,GAZD;AAaA,SAAOY,aAAP;AACH;;AAED,eAAeF,cAAf","sourcesContent":["import menuItems from \"Menu/Constants\";\r\n\r\nexport function incrementItem(id) {\r\n    const oldItemIndex = shoppingItems.findIndex(it => it.id === id)\r\n    const currentItem = {idItem : id , user : getCookie('email') , quantity : 1};\r\n    Axios.post(\"http://localhost:4000/addItem\", {\r\n        entry : currentItem\r\n    })\r\n    .then(() => {\r\n        const newItems = [...shoppingItems]\r\n        newItems[oldItemIndex].quantity += 1\r\n        setShoppingItems(newItems)\r\n    })\r\n    .catch(console.log)\r\n}\r\n\r\nfunction dataCartFormat(userData){\r\n    var convertedData = [];\r\n    userData.forEach((userItem) => {\r\n        for(let key in menuItems){\r\n            if(menuItems[key].id === userItem.idItem){\r\n                convertedData.push({\r\n                    id : menuItems[key].id,\r\n                    name : key ,\r\n                    price : menuItems[key].price,\r\n                    quantity : userItem.quantity\r\n                })\r\n                break;\r\n            }\r\n        }\r\n    })\r\n    return convertedData;\r\n}\r\n\r\nexport default dataCartFormat;"]},"metadata":{},"sourceType":"module"}