{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_Projects\\\\restaurant\\\\restaurant\\\\src\\\\Components\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport RegisterLogo from '../Images/logo_register.jpg';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { registerPerson } from '../Utils/Register/RegisterValidation';\nimport Field from './RegisterSubComp/Field';\nimport { FIELDS } from '../Utils/Register/Constants';\nimport { ROUTES_WITHOUT_HOMEPAGE } from '../Utils/Register/Constants';\nimport Axios from \"axios\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const [nick, setNick] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [pass, setPass] = useState('');\n  const [rePass, setRePass] = useState('');\n  const [email, setEmail] = useState('');\n  const [users, setUsers] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n  const [invalidRegister, setInvalidRegister] = useState({\n    nick: '',\n    firstName: '',\n    lastName: '',\n    pass: '',\n    rePass: '',\n    email: ''\n  });\n  useEffect(() => {\n    Axios.get(\"http://localhost:4000/all\").then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n\n  function getErrorMessage(value) {\n    return invalidRegister[value];\n  }\n\n  let routing = useHistory();\n  const currentLocation = props.location.pathname;\n  if (ROUTES_WITHOUT_HOMEPAGE[currentLocation]) return null;\n  {\n    redirect && routing.push('./login');\n  }\n  return /*#__PURE__*/_jsxDEV(\"container\", {\n    className: \"register-container\",\n    children: [console.log(users), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-img-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: RegisterLogo,\n        className: \"register-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-form\",\n      children: FIELDS.map(currentField => {\n        return /*#__PURE__*/_jsxDEV(Field, {\n          type: currentField.type,\n          icon: currentField.icon,\n          value: eval(currentField.value),\n          setField: eval(currentField.setField),\n          errMsg: getErrorMessage(currentField.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"register-btn\",\n      onClick: () => registerPerson(nick, firstName, lastName, pass, rePass, email, users, setInvalidRegister, setRedirect),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"TAFtEu9KtN8jYz4G+P6s6kzSFY8=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/React_Projects/restaurant/restaurant/src/Components/Register.js"],"names":["React","useEffect","RegisterLogo","useState","useHistory","registerPerson","Field","FIELDS","ROUTES_WITHOUT_HOMEPAGE","Axios","axios","Register","props","nick","setNick","firstName","setFirstName","lastName","setLastName","pass","setPass","rePass","setRePass","email","setEmail","users","setUsers","redirect","setRedirect","invalidRegister","setInvalidRegister","get","then","response","console","log","data","catch","error","getErrorMessage","value","routing","currentLocation","location","pathname","push","map","currentField","type","icon","eval","setField"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport RegisterLogo from '../Images/logo_register.jpg'\r\nimport {useState} from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport {registerPerson} from '../Utils/Register/RegisterValidation'\r\nimport Field from './RegisterSubComp/Field'\r\nimport { FIELDS } from '../Utils/Register/Constants'\r\nimport { ROUTES_WITHOUT_HOMEPAGE } from '../Utils/Register/Constants'\r\nimport Axios from \"axios\"\r\nimport axios from 'axios'\r\n\r\nconst Register = (props)=>{\r\n\r\n    const [nick , setNick] = useState('');\r\n    const [firstName , setFirstName] = useState('');\r\n    const [lastName , setLastName] = useState('');\r\n    const [pass , setPass] = useState('');  \r\n    const [rePass , setRePass] = useState('');\r\n    const [email , setEmail] = useState('');\r\n    const [users , setUsers] = useState([]);\r\n    const [redirect , setRedirect] = useState(false);\r\n    const [invalidRegister , setInvalidRegister] = useState({nick : '' , firstName : '' , lastName : '' , pass : '' , rePass : '' , email : ''});\r\n\r\n    useEffect(()=>{\r\n        Axios.get(\"http://localhost:4000/all\")\r\n        .then(response =>{\r\n            console.log(response.data);\r\n        })\r\n        .catch(error =>{\r\n            console.log(error);\r\n        })\r\n    } , [])\r\n\r\n    function getErrorMessage(value){\r\n        return invalidRegister[value];\r\n    }\r\n\r\n    let routing = useHistory();\r\n    const currentLocation = props.location.pathname;\r\n    if(ROUTES_WITHOUT_HOMEPAGE[currentLocation]) return null;\r\n    {redirect && routing.push('./login')}\r\n\r\n    return(\r\n        <container className = 'register-container'>\r\n            {console.log(users)}\r\n            <div className = 'register-img-container'>\r\n                <img src = {RegisterLogo} className = \"register-img\"></img>\r\n            </div>\r\n            <div className = 'register-form'>\r\n                {FIELDS.map((currentField)=>{\r\n                    return(\r\n                        <Field type = {currentField.type} icon = {currentField.icon} value = {eval(currentField.value)}\r\n                        setField = {eval(currentField.setField)} errMsg = {getErrorMessage(currentField.value)}/>\r\n                    )\r\n                })}\r\n            </div>\r\n            <button className = 'register-btn' onClick = {() => registerPerson(nick , firstName , lastName , pass , rePass , email , users , setInvalidRegister , setRedirect)}>Submit</button>\r\n        </container>    \r\n    );\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}